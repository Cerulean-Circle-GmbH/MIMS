pipeline {
    agent {
        docker {
            image 'once.sh-builder'
            args '-v once_jenkins:/var/dev -v once_jenkins_home:/var/jenkins_home -w /var/dev --entrypoint "" --user root'
            reuseNode true
        }
    }

    options {
        ansiColor('xterm')
    }
    
    stages {
        stage('Cleanup & update') {
            steps {
                sh '''#!/usr/bin/bash
                    rm -rf results
                    mkdir -p results
                    cd /var/dev && ( git clone 2cuGitHub:Cerulean-Circle-GmbH/Once.2023.git || true )
                    cd Once.2023 && git reset --hard && git checkout dev && git pull
                    '''
            }
        }
        stage('Backup structr') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: "agent.jenkins", keyFileVariable: 'keyfile'),
                                 string(credentialsId: 'jenkins4bitbucket', variable: 'BBTOKEN')]) {
                    sh '''#!/usr/bin/bash
                        /var/dev/Once.2023/qa/backup/backupStructr.sh
                    '''
                }
            }
        }
        stage('Backup jenkins') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: "agent.jenkins", keyFileVariable: 'keyfile')]) {
                    sh '''#!/usr/bin/bash
                        /var/dev/Once.2023/qa/backup/backupJenkins.sh
                    '''
                }
            }
        }
        stage('Backup once(test.wo-da.de)') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: "agent.jenkins", keyFileVariable: 'keyfile')]) {
                    sh '''#!/usr/bin/bash
                        /var/dev/Once.2023/qa/backup/backupOnce.sh
                    '''
                }
            }
        }
        stage('Stats') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: "agent.jenkins", keyFileVariable: 'keyfile')]) {
                    sh '''#!/usr/bin/bash
                    ssh -i ${keyfile} -o 'StrictHostKeyChecking no' backup.sfsre.com "tree /var/backups" > results/tree.txt
                    ssh -i ${keyfile} -o 'StrictHostKeyChecking no' backup.sfsre.com "du -skh /var/backups/*" > results/du.txt
                    ssh -i ${keyfile} -o 'StrictHostKeyChecking no' backup.sfsre.com "df -h /var/backups/" >> results/du.txt
                    '''
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'results/*', onlyIfSuccessful: true
        }
    }
}