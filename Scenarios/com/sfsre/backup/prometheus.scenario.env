## Source setup
# This is the scenario component name which will be automatically filled. Default is ignored but must not be empty.
SCENARIO_SRC_COMPONENT="io/prometheus/prometheus/2.54.1"
# This is the cache directory for downloaded files, like structr.zip or WODA-current.tar.gz
SCENARIO_SRC_CACHEDIR="~/.cache/MIMS-Scenarios"
## Server setup
# What is the server, the scenario will be deployed?
SCENARIO_SERVER_NAME="backup.sfsre.com"
# What is the SSH config the server can be connected with?
SCENARIO_SERVER_SSHCONFIG="backup.sfsre.com"
# What is the scenarios root directory on the server?
SCENARIO_SERVER_CONFIGSDIR="/var/dev/MIMS-Scenarios"
# Where to find the servers letsencrypt base dir?
SCENARIO_SERVER_CERTCONFIGDIR="none"
# Where to find the servers certificate?
SCENARIO_SERVER_CERTIFICATEDIR="none"
## Config data setup
# What is the path of the data volume (e.g. './data' or 'data-volume'; if it contains a '/', it is considered as a path, otherwise as a docker volume name)?
SCENARIO_DATA_VOLUME="prometheus_home"
# Where to find the restore data (none - if not applicable)?
SCENARIO_DATA_RESTORESOURCE="none"
# Is the data volume external (true or false; if not external, it will be deleted on down)?
SCENARIO_DATA_EXTERNAL="true"
# What is the path used to store the scraped data (e.g. './db' or 'db-volume'; if it contains a '/', it is considered as a path, otherwise as a docker volume name)?
SCENARIO_DATA_VOLUME1="prometheus_db"
## Unique resources
# What is the http port of the docker container?
SCENARIO_RESOURCE_HTTPPORT="9090"
## Server setup
# What is the servers hostname?
SCENARIO_SERVER_HOSTNAME="prometheus"
# What is the servers network name?
SCENARIO_SERVER_NETWORKNAME="monitoring-network"
